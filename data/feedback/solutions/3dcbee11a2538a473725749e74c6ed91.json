{
  "id": "3dcbee11a2538a473725749e74c6ed91",
  "problem_id": "76cc035a8089bd8a148f25115534d818",
  "code": "def minWindow(s, t):\n    if not t or not s:\n        return \"\"\n\n    dict_t = {}\n    for c in t:\n        if c not in dict_t:\n            dict_t[c] = 1\n        else:\n            dict_t[c] += 1\n\n    start, start_index, min_len, counter = 0, -1, float('inf'), 0\n    for i in range(len(s)):\n        if s[i] in dict_t:\n            if dict_t[s[i]] > 0:\n                counter += 1\n            dict_t[s[i]] -= 1\n\n        while counter == len(t):\n            if i - start + 1 < min_len:\n                min_len = i - start + 1\n                start_index = start\n\n            if s[start] in dict_t:\n                dict_t[s[start]] += 1\n                if dict_t[s[start]] > 0:\n                    counter -= 1\n            start += 1\n\n    if min_len == float('inf'):\n        return \"\"\n    return s[start_index : start_index + min_len]",
  "language": "python",
  "reasoning": "```python\ndef minWindow(s, t):\n    if not t or not s:\n        return \"\"\n\n    dict_t = {}\n    for c in t:\n        if c not in dict_t:\n            dict_t[c] = 1\n        else:\n            dict_t[c] += 1\n\n    start, start_index, min_len, counter = 0, -1, float('inf'), 0\n    for i in range(len(s)):\n        if s[i] in dict_t:\n            if dict_t[s[i]] > 0:\n                counter += 1\n            dict_t[s[i]] -= 1\n\n        while counter == len(t):\n            if i - start + 1 < min_len:\n                min_len = i - start + 1\n                start_index = start\n\n            if s[start] in dict_t:\n                dict_t[s[start]] += 1\n                if dict_t[s[start]] > 0:\n                    counter -= 1\n            start += 1\n\n    if min_len == float('inf'):\n        return \"\"\n    return s[start_index : start_index + min_len]\n```\n\n该算法使用滑动窗口的方法，从左到右遍历字符串 `s`，并在字符串 `t` 的字符上增加计数器，并在达到 `t` 的字符数量后，从左到右滑动窗口。\n\n最小覆盖子串的起始索引和长度存储在变量 `start_index` 和 `min_len` 中，并在达到最小长度后返回。",
  "created_at": 1741315716.767369
}